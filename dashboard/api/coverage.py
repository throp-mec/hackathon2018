#!/usr/local/bin/python3
import time
import sys
import csv

"""
    the numbers are generated by creating the text coverage

     ./venv/bin/coverage run --source=google_feed ./tests.py ; ./venv/bin/coverage annotate -d coverage-text

    then it's parsed into the numbers which are given to this script which saves
    them as CSV values where they will sit until they are required!

    Grabs all lines that is more covered
        grep -r "^>" coverage-text/* | wc -l

    Grabs all lines that are not covered
        grep -r "^\!" coverage-text/* | wc -l

    Usage: ./coverage.py <lines_covered> <lines_run>
"""


data_path = './coverage.csv'

def get_coverage():
    with open(data_path, 'r') as f:
        entries = csv.reader(f)
        def row_to_entry(row):
            errors = int(row[1].strip())
            no_errors = int(row[2].strip())
            return {
                'date': float(row[0].strip()),
                'value': errors / (no_errors+errors),
            }
        return [ row_to_entry(row) for row in entries ]

def write_coverage(lines_covered, lines_run):
    with open(data_path, 'a') as f:
        now = time.time()
        f.write(f"{now}, {lines_covered}, {lines_run}\n")

def main():
    if len(sys.argv) < 3:
        return print(get_coverage())

    write_coverage(sys.argv[1], sys.argv[2])

if __name__ == "__main__":
    main()
